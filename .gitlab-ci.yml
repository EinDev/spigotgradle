stages:
  - build
  - test

image: $CI_REGISTRY_IMAGE/example-build:$CI_COMMIT_REF_SLUG
before_script:
  - export GRADLE_USER_HOME=`pwd`/.gradle
after_script:
  - echo "End CI"

cache:
  paths:
    - .gradle/wrapper/*/*/*/*.zip
    - .gradle/caches/*/generated-gradle-jars/*.jar
    - .gradle/caches/jars*
    - .gradle/caches/modules*



build-plugin:
  stage: build
  image: openjdk:8-alpine
  script:
    - ./gradlew assemble
  artifacts:
    paths:
      - "build/libs/*"
    expire_in: 31 days

build-test-image:
  stage: build
  image: docker:19.03.1
  services:
    - docker:19.03.1-dind
  variables:
    DOCKER_HOST: tcp://docker:2375/
    DOCKER_DRIVER: overlay2
    # See https://github.com/docker-library/docker/pull/166
    DOCKER_TLS_CERTDIR: ""
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    - docker info
  after_script:
    - echo "End CI"
  script:
    - IMAGE_TAG="$CI_REGISTRY_IMAGE/example-build:$CI_COMMIT_REF_SLUG"
    - echo "Image tag '$IMAGE_TAG'"
    - cd example/docker
    - docker build --pull -t "$IMAGE_TAG" .
    - docker push "$IMAGE_TAG"



test-plugin:
  stage: test
  script:
    - ./gradlew test
  artifacts:
    when: always
    reports:
      junit: "build/test-results/test/TEST-*.xml"
    expire_in: 15 days

test-example-server:
  stage: test
  image: $CI_REGISTRY_IMAGE/example-build:$CI_COMMIT_REF_SLUG
  cache:
    key: example-server
    paths:
      - example/server/world*
      - example/build/spigotBuildTool/BuildTool.jar
      - example/build/spigotBuildTool/build/apache-*
      - example/build/spigotBuildTool/build/BuildData/.git
      - example/build/spigotBuildTool/build/Bukkit/.git
      - example/build/spigotBuildTool/build/CraftBukkit/.git
      - example/build/spigotBuildTool/build/Spigot/.git
      - .gradle/wrapper/*/*/*/*.zip
      - .gradle/caches/*/generated-gradle-jars/*.jar
      - .gradle/caches/jars*
      - .gradle/caches/modules*
  script:
    - cd example
    - ./gradlew spigotServerPrepare
    - MESSAGE="ci spigot server test commit-$CI_COMMIT_SHA"
    - echo $MESSAGE | tee src/main/resources/example/plugin/EnableMessage.txt
    - nohup ./gradlew run --console=plain | tee server.log &
    - SERVERPID=$!
    - ( timeout 180s tail -fn +0 server.log & ) | grep -q "$MESSAGE" || ( echo "Timeout waiting for message!" && exit 1 )
    - kill $SERVERPID
    - while kill -0 $SERVERPID &>/dev/null; do sleep 1; done
